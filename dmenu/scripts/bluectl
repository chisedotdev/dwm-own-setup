#!/bin/bash

dmenu="dmenu -fn Hack:size=15 -nb #2D121F -nf #FFFFFF -sb #B984E5 -sf #FFD7FF"

# Ensure Bluetooth service is active
if ! systemctl is-active --quiet bluetooth; then
    notify-send "Bluetooth" "Starting Bluetooth service..."
    sudo systemctl start bluetooth
fi

# Function to list devices
list_devices() {
    bluetoothctl devices | awk '{print $2 " " $3 " " $4 " " $5 " " $6}'
}

bluetooth_status() {
  status=$(rfkill list all | grep -A 1 -i "bluetooth" | grep -i "soft blocked" | awk '{print $NF}')
  
  if [[ $status == "yes" ]]; then
    echo "On"
  else
    echo "Off"
  fi
}
BT_STATUS=$(bluetooth_status)
# Main menu
ACTION=$(echo -e "$BT_STATUS\nScan\nPair\nUnpair\nConnect\nDisconnect" | $dmenu -i -p "Bluetooth Action:")

case $ACTION in
    "On")
      rfkill unblock bluetooth
      ;;
    "Off")
      rfkill block bluetooth
      ;;
    "Scan")
        # Start scanning for devices
        notify-send "Bluetooth" "Scanning for devices..."
        bluetoothctl --timeout 5 scan on
        SCANNED_DEVICES=$(bluetoothctl devices | awk '{print $2 " " $3 " " $4 " " $5 " " $6}')
        if [[ -n $SCANNED_DEVICES ]]; then
            notify-send "Bluetooth" "Scan complete. Devices updated."
        else
            notify-send "Bluetooth" "No devices found."
        fi
        ;;
    "Pair")
        DEVICE=$(list_devices | $dmenu -i -p "Select device to pair:" | awk '{print $1}')
        if [[ -n $DEVICE ]]; then
            bluetoothctl pair "$DEVICE" && notify-send "Bluetooth" "Paired with $DEVICE"
        fi
        ;;
    "Unpair")
        DEVICE=$(list_devices | $dmenu -i -p "Select device to unpair:" | awk '{print $1}')
        if [[ -n $DEVICE ]]; then
            bluetoothctl remove "$DEVICE" && notify-send "Bluetooth" "Unpaired $DEVICE"
        fi
        ;;
    "Connect")
        DEVICE=$(list_devices | $dmenu -i -p "Select device to connect:" | awk '{print $1}')
        if [[ -n $DEVICE ]]; then
            bluetoothctl connect "$DEVICE" && notify-send "Bluetooth" "Connected to $DEVICE"
        fi
        ;;
    "Disconnect")
        DEVICE=$(list_devices | $dmenu -i -p "Select device to disconnect:" | awk '{print $1}')
        if [[ -n $DEVICE ]]; then
            bluetoothctl disconnect "$DEVICE" && notify-send "Bluetooth" "Disconnected from $DEVICE"
        fi
        ;;
    *)
        notify-send "Bluetooth" "No action selected."
        ;;
esac
